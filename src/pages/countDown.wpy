<template>
  <view class="container">
    <!-- 发送短信 -->
    <smscode :code.sync="codevalue"></smscode>
    <view style="height:40rpx"></view>
    <view class="order_title">订单支付倒计时--示例</view>
    <view class="dirver"></view>
    <view style="height:20rpx"></view>
    <view wx:if="{{orderpsyTimeer.minute&&orderpsyTimeer.second}}">请在{{orderpsyTimeer.minute}}分{{orderpsyTimeer.second}}秒内支付</view>
    <view style="height:20rpx"></view>
    <block wx:if="{{orderpsyTimeer.day}}">
       <view wx:if="{{orderpsyTimeer.day!='00'}}">还剩{{orderpsyTimeer.day}}天{{orderpsyTimeer.hour}}时自动确认</view>
    </block>
    <block wx:if="{{orderpsyTimeer.minute}}">
       <view wx:if="{{orderpsyTimeer.day=='00'&&orderpsyTimeer.hour=='00'&&orderpsyTimeer.minute&&orderpsyTimeer.second}}">还剩{{orderpsyTimeer.minute}}分{{orderpsyTimeer.second}}秒自动确认</view>
    </block>
  </view>
</template>
<script>
import wepy from 'wepy';
import tip from '../utils/tip';
import request from '../utils/request';
import {orderTime} from '../utils/util';
import smscode from '../components/smscode';
var moment = require('moment');

export default class CountDown extends wepy.page {
  config = {
    navigationBarTitleText: '倒计时demo'
  };
  components = {
    smscode: smscode
  };
  events = {
    fetchSendCode(){
      console.log('发送验证码');
    }
  }
  data = {
    codevalue:'',
    orderpsyTimeer:{
      day:null,
      hour:null,
      minute:null,
      second:null,
      timer:null
    },
  }

 async orderPay(){
    let that = this
    let endtime = moment().add(30,'minutes').add(7,'days').format('YYYY-MM-DD HH:mm:ss')
    console.log(endtime);
    that.orderpsyTimeer.timer = setInterval(()=>{
      var downTime = parseInt(new Date(endtime.replace(/-/g, "/")).getTime() - new Date().getTime())
      if(downTime<=0){
        that.orderpsyTimeer.minute = "00"
        that.orderpsyTimeer.second = "00"
         clearInterval(that.orderpsyTimeer.timer);
         return;
      }else{
        var tiemValue = orderTime(endtime)
        that.orderpsyTimeer.day = tiemValue.day
        that.orderpsyTimeer.hour = tiemValue.hour
        that.orderpsyTimeer.minute = tiemValue.minute
        that.orderpsyTimeer.second = tiemValue.second
      }
      that.$apply();
      tip.loaded()
    },1000)
  }

  async onLoad(){
   await tip.loading('加载数据...')
    this.orderPay()
  }

  //页面卸载清空timer
  onUnload(){
    let that = this
    clearInterval(that.orderpsyTimeer.timer);
  }

}
</script>
<style lang="less" scoped>
  .container{
    padding:30rpx;
    background: #F5F5F5
  }
  .order_title{
    height: 60rpx;
  }
  .dirver{
    height: 10rpx;
    width: 375rpx;
    background: #00ff33;
  }
</style>
